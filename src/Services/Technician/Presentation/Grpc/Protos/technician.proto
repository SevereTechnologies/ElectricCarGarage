syntax = "proto3";

option csharp_namespace = "TechnicianGateway.Presentation.Grpc.Protos";

// The Technician service definition.
service TechnicianProtoService {
	rpc CreateTechnician (CreateTechnicianRequest) returns (CreateTechnicianReply);
	rpc UpdateTechnician (UpdateTechnicianRequest) returns (UpdateTechnicianReply);
	rpc GetAllTechnicians (GetAllTechniciansRequest) returns (GetAllTechniciansReply);
	rpc GetTechnicianById (GetTechnicianByIdRequest) returns (GetTechnicianByIdReply);
}

// The model to pass as request for create and update. Same model used to return single and list
message TechnicianProtoModel {
	string id = 1;
	string first_name = 2;
	string last_name = 3;
	string email = 4;
	string phone = 5;
	string date_of_birth = 6;
	string gender = 7;
	string address = 8;
	string city = 9;
	string state = 10;
	int32  zip = 11;
	string created_on = 12;
	string updated_on = 13;
}

// The request message containing the Technician to be created.
message CreateTechnicianRequest {
	TechnicianProtoModel technician = 1;
}
// The reply message containing the id if sucessful.
message CreateTechnicianReply {
	string id = 1;
	string message = 2;
}

// The request message containing the Technician to be created.
message UpdateTechnicianRequest {
	TechnicianProtoModel technician = 1;
}
// The reply message containing the id if sucessful.
message UpdateTechnicianReply {
	string message = 1;
}

// The request message to return all technicians
message GetAllTechniciansRequest {
}
// return list Technicians
message GetAllTechniciansReply {
	repeated TechnicianProtoModel technicians = 1;
	string message = 2;
}

// The request to get single technician
message GetTechnicianByIdRequest {
	string id = 1;
}
// Return single technician by id
message GetTechnicianByIdReply {
	TechnicianProtoModel technician = 1;
	string message = 2;
}