Intro
- Electric garage is an Electric Vehicle management application for EVs of all types.
	-repairs
		- Curb Rash
		- Leak Valves
		- 
	-paint
		- Panel
		- Full Car
	-maintained
		- tire rotation
		- Cooling system
		- Cabin air filter replacement
		- Suspension
		- steering
		- brake system
	-installation
		- PPF
		- Home Charger
		- Window Film
		- Cosmetic lights
		- 12 volt battery

Services that make up the solution:
- Catalog
	- Ports:
		-Local (HTTP-HTTPS) 5000-5050
		-Docker (HTTP-HTTPS) 6000 - 6060
		-Docker Internal (HTTP-HTTPS) 8080 - 8081
	- Architecture, Libraries and Patterns
		- Minimal API using Carter library, C#12, Vertical Slice Architecture, CQRS Design Pattern using MediatR library, Marten Library to convert .NET Transaction to DocumentDB in PostgreSQL, Mapster library for mapping DTO classes, FluentValidation for validating inputs and add MediatR validation pipeline. Logging and Exception handling with MediatR pipeline behavior for implemting cross cutting concern. Docker file and Docker-compose yaml file for containerizing and orchastring the DB and service
	- 
- Technician
- Customer
- Payment
- Discount
- WorkOrder
- Authentication
- Email
- SAGA Orchastration
- Yarp API Gateway

Databases that make up the solution:
- Catalog (PostgreSQL)
- Technician (PostgreSQL)
- Customer (PostgreSQL)
- Payment (SQLServer)
- Discount (SQLite)
- Authentication (SQL Server)
- SAGA (PostgreSQL)

Components/Libraries that make up the solution:
- Redis
- RabitMQ
- MassTransit
- EF
- grPC
- REST
- Docker
-

Big Picture
Client(Web,Mobile,desktop)
	-> API Gateway(Yarp API)
		-> Customer Service
			-> Database(PostgreSQL)
		-> Technician Service
			-> Database(PostgreSQL)
		-> Catalog Service
			-> Database(PostgreSQL)
			-> Database(Redis)
			-> RabitMQ
		-> Payment Service
			-> Database(SQLServer)
			-> RabitMQ
		-> Discount Service
			-> Database(PostgreSQL)
		-> WorkOrder Service
			-> Database(SQLServer)
			-> RabitMQ
		-> Authentication Service
			-> Database(SQLServer)
		-> Email Service


